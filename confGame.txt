#enter configuration in the following format:
#{"Title": "String", "Description": "String", "ModelDict": {ModelDict}, "States": Integer, "Tape": "String"}
#Last 3 variables can be left as None
#Use a new line for a new configuration
{"Title": "Make your Mark", "Description": "Change the tape to all 1 regardless of input\nDo so by ensuring the head outputs 1 and move right regardless of what it reads", "ModelDict": {'0': {'X': {'output': {'val': '1', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': '1', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '0'}}}, "States": 1, "Tape": "10X10X10X1X1X1X0X1X0XX0XX1X0S"}
{"Title": "Turing's first", "Description": "Described as Turing's very first example, this machine prints the pattern '0X1X' repeateadly regardless of input\nTo do this, you will need to cycle through four different states", "ModelDict": {'0': {'X': {'output': {'val': '0', 'dir': 1}, 'nextstate': '1'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '1'}, '1': {'output': {'val': '0', 'dir': 1}, 'nextstate': '1'}}, '1': {'X': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '2'}, '0': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '2'}, '1': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '2'}}, '2': {'X': {'output': {'val': '1', 'dir': 1}, 'nextstate': '3'}, '0': {'output': {'val': '1', 'dir': 1}, 'nextstate': '3'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '3'}}, '3': {'X': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '0'}}}, "States": 4, "Tape": "XXXXXXXX111111110000000S"}
{"Title": "Over the Fence", "Description": "In this tape there will be a series of X or 0 followed by 1\nMark 1 after the last 1 and terminate the string\nHint: Change state to S to terminate", "ModelDict": {'0': {'X': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '1': {'X': {'output': {'val': '1', 'dir': 1}, 'nextstate': 'S'}, '0': {'output': {'val': '1', 'dir': 1}, 'nextstate': 'S'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}}, "States": 2, "Tape": "XXXX000011110000XXXX1111"}
{"Title": "Unary Addition", "Description": "We now have 2 unary (base 1) numbers separated by a single X or 0\nThe challenge is to add them to form a single unary number", "ModelDict": {'0': {'X': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '1': {'X': {'output': {'val': '1', 'dir': 1}, 'nextstate': '2'}, '0': {'output': {'val': '1', 'dir': 1}, 'nextstate': '2'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '2': {'X': {'output': {'val': 'X', 'dir': -1}, 'nextstate': '3'}, '0': {'output': {'val': '0', 'dir': -1}, 'nextstate': '3'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '2'}}, '3': {'X': {'output': {'val': 'X', 'dir': 0}, 'nextstate': 'S'}, '0': {'output': {'val': '0', 'dir': 0}, 'nextstate': 'S'}, '1': {'output': {'val': '0', 'dir': 0}, 'nextstate': 'S'}}}, "States": 4, "Tape": "00000011111110111111100000"}
{"Title": "Unary Subtraction", "Description": "Now we have 2 unary number, where the left one is larger than the right one\nThe area after the last number is denoted by X", "ModelDict": {'0': {'X': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': '1', 'dir': 0}, 'nextstate': '1'}}, '1': {'X': {'output': {'val': '0', 'dir': 0}, 'nextstate': '2'}, '0': {'output': {'val': '0', 'dir': 0}, 'nextstate': '2'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '2': {'X': {'output': {'val': 'X', 'dir': 0}, 'nextstate': 'S'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '2'}, '1': {'output': {'val': '0', 'dir': -1}, 'nextstate': '3'}}, '3': {'X': {'output': {'val': '0', 'dir': -1}, 'nextstate': '3'}, '0': {'output': {'val': '0', 'dir': -1}, 'nextstate': '3'}, '1': {'output': {'val': '0', 'dir': 1}, 'nextstate': '2'}}}, "States": 4, "Tape": "0000001111111101111XXXXX"}
{"Title": "Copy", "Description": "Here we will make a copy a unary number\nThe two numbers will be separated by a 0, and a 0 will precede the first number\nSpaces after the last number will be X. Remember to leave enough space for the number to be copied out\nHints: replace the 1 value with X in the first number after you have read it", "ModelDict": {'0': {'X': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '0'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '1': {'X': {'output': {'val': '0', 'dir': -1}, 'nextstate': '2'}, '0': {'output': {'val': '0', 'dir': -1}, 'nextstate': '2'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '1'}}, '2': {'X': {'output': {'val': 'X', 'dir': -1}, 'nextstate': '2'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '6'}, '1': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '3'}}, '3': {'X': {'output': {'val': 'X', 'dir': 1}, 'nextstate': '3'}, '0': {'output': {'val': '0', 'dir': 0}, 'nextstate': '4'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '3'}}, '4': {'X': {'output': {'val': '1', 'dir': 0}, 'nextstate': '5'}, '0': {'output': {'val': '0', 'dir': 1}, 'nextstate': '4'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '4'}}, '5': {'X': {'output': {'val': 'X', 'dir': 0}, 'nextstate': '5'}, '0': {'output': {'val': '0', 'dir': -1}, 'nextstate': '2'}, '1': {'output': {'val': '1', 'dir': -1}, 'nextstate': '5'}}, '6': {'X': {'output': {'val': '1', 'dir': 1}, 'nextstate': '6'}, '0': {'output': {'val': '0', 'dir': 0}, 'nextstate': 'S'}, '1': {'output': {'val': '1', 'dir': 1}, 'nextstate': '5'}}}, "States": 7, "Tape": "0111111XXXXXXXXXXXX"}
{"Title": "Free Play", "Description": "Challenge yourself with the lack of rules!\nOr you can try making a busy beaver, something that cannot be verified by looking at the end state:\nhttps://www.youtube.com/watch?v=CE8UhcyJS0I", "ModelDict": None, "States": None, "Tape": None}